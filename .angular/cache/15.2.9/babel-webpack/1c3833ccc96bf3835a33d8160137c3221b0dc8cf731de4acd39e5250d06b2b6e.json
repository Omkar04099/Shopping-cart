{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class JwtClientService {\n  constructor(http) {\n    this.http = http;\n  }\n  generateToken(request) {\n    return this.http.post(\"http://localhost:8086/authenticate\", request, {\n      responseType: 'text'\n    });\n  }\n  welcome(token) {\n    let tokenStr = 'Bearer ' + token;\n    const headers = new HttpHeaders().set('Authorization', tokenStr);\n    return this.http.get('http://localhost:8086/', {\n      headers,\n      responseType: 'text'\n    });\n  }\n}\nJwtClientService.ɵfac = function JwtClientService_Factory(t) {\n  return new (t || JwtClientService)(i0.ɵɵinject(i1.HttpClient));\n};\nJwtClientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: JwtClientService,\n  factory: JwtClientService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAkCA,WAAW,QAAQ,sBAAsB;;;AAM3E,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;EAAe;EAGhCC,aAAa,CAACC,OAAY;IAC/B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,oCAAoC,EAAED,OAAO,EAAE;MAACE,YAAY,EAAE;IAAgB,CAAC,CAAC;EACxG;EAEOC,OAAO,CAACC,KAAa;IAC1B,IAAIC,QAAQ,GAAG,SAAS,GAAED,KAAK;IAC/B,MAAME,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;IAChE,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAC,wBAAwB,EAAC;MAACF,OAAO;MAAEJ,YAAY,EAAE;IAAgB,CAAC,CAAC;EAC1F;;AAbWN,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAa,SAAhBb,gBAAgB;EAAAc,YAFf;AAAM","names":["HttpHeaders","JwtClientService","constructor","http","generateToken","request","post","responseType","welcome","token","tokenStr","headers","set","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\OMAKARAN\\Desktop\\hands-on\\shopping-cart\\src\\app\\services\\jwt-client.service.ts"],"sourcesContent":["\nimport { HttpClient, HttpHandler, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtClientService {\n\n  constructor(private http:HttpClient) { }\n\n\n  public generateToken(request: any){\n    return this.http.post(\"http://localhost:8086/authenticate\", request, {responseType: 'text' as 'json'});\n  }\n\n  public welcome(token: string){\n    let tokenStr = 'Bearer '+ token;\n    const headers = new HttpHeaders().set('Authorization', tokenStr)\n    return this.http.get('http://localhost:8086/',{headers, responseType: 'text' as 'json'})\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}